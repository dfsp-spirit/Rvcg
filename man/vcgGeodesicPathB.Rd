% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vcgDijkstra.r
\name{vcgGeodesicPathB}
\alias{vcgGeodesicPathB}
\title{Compute geodesic path between vertices on a mesh}
\usage{
vcgGeodesicPathB(x, vertpointer_source, vertpointer_targets, maxdist = 1e+06)
}
\arguments{
\item{x}{triangular mesh of class \code{mesh3d}}

\item{vertpointer_source}{scalar positive integer, the source vertex index}

\item{vertpointer_targets}{positive integer vector, the target vertex indices}

\item{maxdist}{double, the maximal distance to travel along the mesh edges during distance computation}
}
\value{
an integer vector representing the paths.
}
\description{
Compute geodesic path between vertices on a mesh
}
\examples{
data(humface)
vcgGeodesicPathB(humface,1,c(5,10))
\dontrun{
  if(requireNamespace("fsbrain", quitely=TRUE)) {
  sjd = fsaverage.path(TRUE);
  surface = subject.surface(sjd, 'fsaverage', surface = "white", hemi = "lh");
  p = vcgGeodesicPathB(fs.surface.to.tmesh3d(surface), 5, c(10, 20));
  vis.subject.morph.native(sjd, 'fsaverage', 'thickness', views='si');
  vis.path.along.verts(surface$vertices, p$paths[[1]], color="#FF0000");
  vis.path.along.verts(surface$vertices, p$paths[[2]], color="#0000FF");
  }
}
}
